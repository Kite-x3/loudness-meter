<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:AvaloniaApplication1.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls = "clr-namespace:AvaloniaApplication1.Views.Templates"
        mc:Ignorable="d" d:DesignWidth="1048" d:DesignHeight="650"
        Width="1048" Height="650"
        x:Class="AvaloniaApplication1.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="AvaloniaApplication1"
        WindowStartupLocation="CenterScreen">
    
    <Window.Styles>
        <Style Selector="Button.small">
            <Setter Property="FontSize" Value="12"> </Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Background" Value="{DynamicResource BrightBlueBrush}"></Setter>
            <Setter Property="CornerRadius" Value="30"></Setter>
            <Setter Property="Padding" Value="7,2"></Setter>
        </Style>
        <Style Selector="Button:pointerover /template/ ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource BrightBlueHoverBrush}"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
        </Style>
    </Window.Styles>
    
    <Design.DataContext>
        <vm:MainWindowViewModel/>
    </Design.DataContext>
    
    <Grid Name="MainGrid" RowDefinitions="Auto, *, Auto" Background="White">
        
        <controls:AnimatedPopup Grid.Row="0"  Name="ChanelConfigPopup" Grid.RowSpan="3" 
                                Foreground="Black" AnimationTime="0.3"
                                Open="{Binding ChanelConfigListIsOpen, Mode=TwoWay}">
            <Border Padding="0" BorderThickness="1.5" CornerRadius="6"
                    Background="White" BorderBrush="Gray">
                
                <ItemsControl ItemsSource="{Binding ChannelConfigurations}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Expander IsExpanded="True" HorizontalAlignment="Stretch" Padding="0">
                                <Expander.Header>
                                    <Label Content="{Binding Key}"></Label>
                                </Expander.Header>
                                
                                <ItemsControl ItemsSource="{Binding }">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Button HorizontalAlignment="Stretch" Background="White"
                                                Content="{Binding LongText}"
                                                Command="{Binding $parent[controls:AnimatedPopup].((vm:MainWindowViewModel)DataContext).ChanelConfigItemPressedCommand}"
                                                CommandParameter="{Binding}"></Button>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Expander>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Border>
        </controls:AnimatedPopup>
        
        
        <!--Title-->
        <Grid Grid.Row="0" Background="{DynamicResource MediumGreyBrush}" Height="60" ColumnDefinitions="Auto, Auto, *, Auto, Auto">
            
            <Grid.Styles>
                <Style Selector="Button">
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Setter Property="Padding" Value="10"></Setter>
                </Style>
                <Style Selector="Button /template/ ContentPresenter">
                    <Setter Property="Transitions">
                        <Transitions>
                            <TransformOperationsTransition Property="RenderTransform"
                                                           Duration="0:0:0.2"></TransformOperationsTransition>
                        </Transitions>
                    </Setter>
                </Style>
                <Style Selector="Button:pointerover /template/ ContentPresenter">
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Setter Property="RenderTransform" Value="scale(1.1)"></Setter>
                </Style>
            </Grid.Styles>
            
            
            <Button Grid.Column="0" Width="50">
                <Image Source="{SvgImage /Assets/images/monitor.svg}"></Image>
            </Button>
            <Button Grid.Column="1" Width="50">
                <Image Source="{SvgImage /Assets/images/lock.svg}"></Image>
            </Button>
            <StackPanel Grid.Column="2" VerticalAlignment="Center" 
                        HorizontalAlignment="Center" Orientation="Horizontal">
                <Label Content="{Binding BoldTitle}" FontSize="24" 
                       FontWeight="Black" Foreground="Black"></Label>
                <Label Content="{Binding RegularTitle}" 
                       FontSize="24" Foreground="Black"></Label>
            </StackPanel>
            <Button Grid.Column="3" Width="45">
                <Image Source="{SvgImage /Assets/images/export.svg}"></Image>
            </Button>
            <Button Grid.Column="4" Width="55">
                <Image Source="{SvgImage /Assets/images/settings.svg}"></Image>
            </Button>
        </Grid>
        
        <!--Main area-->
        <Grid Grid.Row="1" Background="{DynamicResource DarkBlueBrush}" Height="" 
              ColumnDefinitions="Auto, Auto, *">
            <!--Volume Bar-->
            <Grid Grid.Column="0"  Width="150" RowDefinitions="*, Auto,Auto" Margin="0, 20">
                
                <Grid Grid.Row="0" RowDefinitions="3*,3*,3*,9*,5*,4*,9*,9*,9*,6*,Auto"
                      ColumnDefinitions="Auto, *, Auto, Auto">
                    <Grid.Styles>
                        <Style Selector="Label">
                            <Setter Property="Foreground" Value="White"></Setter>
                            <Setter Property="FontSize" Value="12"></Setter>
                            <Setter Property="HorizontalAlignment" Value="Right"></Setter>
                        </Style>
                    </Grid.Styles>
                    
                    <Label Grid.Column="0" Grid.Row="0">0 —</Label>
                    <Label Grid.Column="0" Grid.Row="1">-3 —</Label>
                    <Label Grid.Column="0" Grid.Row="2">-6 —</Label>
                    <Label Grid.Column="0" Grid.Row="3">-9 —</Label>
                    <Label Grid.Column="0" Grid.Row="4">-18 —</Label>
                    <Label Grid.Column="0" Grid.Row="5">-23 —</Label>
                    <Label Grid.Column="0" Grid.Row="6">-27 —</Label>
                    <Label Grid.Column="0" Grid.Row="7">-36 —</Label>
                    <Label Grid.Column="0" Grid.Row="8">-45 —</Label>
                    <Label Grid.Column="0" Grid.Row="9">-54 —</Label>
                    <Label Grid.Column="0" Grid.Row="10"></Label>
                    
                    <Grid Grid.Row="0" Grid.Column="1" Grid.RowSpan="11"  RowDefinitions="23*, 37*">
                        <Rectangle Grid.Row="0" Fill="#b05c4e" Width="20"
                        Margin="0, 8,0,-8"></Rectangle>
                        <Rectangle Grid.Row="1" Fill="White" Width="20"
                                   Margin="0, 8,0,0"></Rectangle>
                    </Grid>
                    
                    <Label Grid.Column="2" Grid.Row="0">—</Label>
                    <Label Grid.Column="2" Grid.Row="1">—</Label>
                    <Label Grid.Column="2" Grid.Row="2">—</Label>
                    <Label Grid.Column="2" Grid.Row="3">—</Label>
                    <Label Grid.Column="2" Grid.Row="4">—</Label>
                    <Label Grid.Column="2" Grid.Row="5">—</Label>
                    <Label Grid.Column="2" Grid.Row="6">—</Label>
                    <Label Grid.Column="2" Grid.Row="7">—</Label>
                    <Label Grid.Column="2" Grid.Row="8">—</Label>
                    <Label Grid.Column="2" Grid.Row="9">—</Label>
                    <Label Grid.Column="2" Grid.Row="10"></Label>
                    
                    <!--Arrow-->
                    <Canvas Name="VolumeContainer" Grid.Row="0" Grid.Column="3" Grid.RowSpan="11" Width="20">
                        <Path Canvas.Top="{Binding VolumePercentPosition}" 
                              Fill="White" Data="M 20 3 L 4 10 L 20 17 Z"></Path>
                    </Canvas>
                    
                </Grid>
                
                <Label Grid.Row="1" Foreground="White" HorizontalAlignment="Center"
                       Margin="0, 5" FontSize="22">LUFS</Label>
                <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center">
                    
                    <Button Classes="small" Margin="0, 0, 20, 0" Width="40" Height="40" Padding="2,0, 0, 0">
                        <Image Height="70" Source="{SvgImage /Assets/images/double-arrow.svg}"></Image>
                    </Button>
                    <Button Classes="small">INT-LRA</Button>
                </StackPanel>
            </Grid>
            <!--Details Panel-->
            <StackPanel Grid.Column="1" Width="170" Margin="15, 15, 10, 0">
                <controls:LargeLabelControl LargeText="-21.1 LUFS" SmallText="SHORT TERM"></controls:LargeLabelControl>
                <controls:LargeLabelControl LargeText="-20.7 LUFS" SmallText="INTEGRATED"></controls:LargeLabelControl>
                <controls:LargeLabelControl LargeText="9.5 LU" SmallText="LOUDNESS RANGE"></controls:LargeLabelControl>
                <controls:LargeLabelControl LargeText="11.5 LU" SmallText="REALTIME DYNAMICS"></controls:LargeLabelControl>
                <controls:LargeLabelControl LargeText="20.5 LU" SmallText="AVG. DYNAMICS (PLR)" 
                                            Margin="0, 0,0,8"></controls:LargeLabelControl>
                
                <controls:LargeLabelControl Classes="button" LargeText="-9.8 LUFS" SmallText="MOMENTARY MAX"></controls:LargeLabelControl>
                <controls:LargeLabelControl Classes="button" LargeText="-15.1 LUFS" SmallText="SHORT TERM MAX"></controls:LargeLabelControl>
                <controls:LargeLabelControl Classes="button" LargeText="0.7dB" SmallText="TRUE PEAK MAX"></controls:LargeLabelControl>
                
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Classes="small" Margin="0, 0, 20, 0">AUTO</Button>
                    <Button Classes="small"  Width="40" Height="40" Background="{DynamicResource FadedRedBrush}"
                            Padding="2,0, 0, 0">
                        <Image Height="70" Source="{SvgImage /Assets/images/cross.svg}"></Image>
                    </Button>
                    
                </StackPanel>
            </StackPanel>
            <!--Graph-->
            <Rectangle Grid.Column="2" Fill="Black"></Rectangle>
        </Grid>
        
        <!--Bottom bar-->
        <Grid Grid.Row="2" Margin="10" 
              ColumnDefinitions="Auto, Auto, *, Auto, Auto, Auto, Auto, Auto">
            <Button Grid.Column="0" Command="{Binding #ChanelConfigPopup.BeginOpen}"
                    Content="{Binding ChannelConfigBtnText}"
                    Name="ChannelConfigBtn" Margin="0, 0, 8, 0"></Button>
            <Button Grid.Column="1" Content="YouTube">
                <Button.Flyout>
                    <Flyout Placement="TopEdgeAlignedLeft">
                        <TextBlock Text="червяки"></TextBlock>
                    </Flyout>
                </Button.Flyout>
            </Button>
            <Button Grid.Column="3" Margin="0, 0, 8, 0">10 sec</Button>
            <Button Grid.Column="4" Margin="0, 0, 8, 0">Continuous</Button>
            <Rectangle Grid.Column="5" Fill="Red" Width="30" Margin="0, 0, 8, 0"></Rectangle>
            <Rectangle Grid.Column="6" Fill="OliveDrab" Width="30"></Rectangle>
        </Grid>
    </Grid>
    
</Window>
